<?php
/**
 * @file
 * Code for the The Sorrow And The Pride (TSATP) feature.
 */

include_once 'the_sorrow_and_the_pride.features.inc';


/**
 * Implements hook_menu().
 */
function the_sorrow_and_the_pride_menu() {
  $items = array();

  $items['home'] = array(
    'title' => 'The Sorrow And The Pride',
    'page callback' => 'the_sorrow_and_the_pride_home',
    'access callback' => TRUE,
  );

  return $items;
}

function the_sorrow_and_the_pride_home() {
  $output = '<p>The names on NZ Memorials.</p>';

  $output .= '<p>Help us identify the men and women memorialised.</p>';

  $readable_text_total = the_sorrow_and_the_pride_task_readable_text_total();
  $readable_text_done = the_sorrow_and_the_pride_task_readable_text_status('yes') +
    the_sorrow_and_the_pride_task_readable_text_status('no');

  $output .= '<h2>Task: Readable text?</h2>';
  $output .= '<p>Find memorial photos that contain readable text.</p>';

  $output .= t('<p>@done of @total photos assessed. !task</p>', array(
    '@done' => $readable_text_done,
    '@total' => $readable_text_total,
    '!task' => $readable_text_done == $readable_text_total ? '' : '<a href="/task/readable-text">Check photos for readable text</a>.'
  ));

  // Transcribe task.
  // Photos that have readable text, but transcription is not complete.
  $transcribe_done = the_sorrow_and_the_pride_task_transcribe_status('done');
  $transcribe_total = the_sorrow_and_the_pride_task_transcribe_status();

  $output .= '<h2>Task: Transcribe text</h2>';
  $output .= '<p>Transcribe text from a photo.</p>';
  $output .= t('<p>@done of @total photos transcribed. !task</p>', array(
    '@done' => $transcribe_done,
    '@total' => $transcribe_total,
    '!task' => $transcribe_done == $transcribe_total ? '' : '<a href="/task/transcribe">Transcribe text</a>.',
  ));

  $output .= '<h2>Task: Extract names</h2>';
  $output .= '<p>Extract names from text inscriptions.</p>';

  $output .= '<h2>Tast: Match names</h2>';
  $output .= '<p>Match names to Cenotaph records</p>';

  return $output;
}

/**
 * Report status of Task: Readable Text.
 */
function the_sorrow_and_the_pride_task_readable_text_status($value = 'yes') {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image')
    //->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_readable_text', 'value', $value, '=');

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

/**
 * Count all memorial images.
 * @todo Maybe we'll need to not count some images...
 *  e.g. only count images in 'memorial/' path.
 *
 * @return int
 */
function the_sorrow_and_the_pride_task_readable_text_total() {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image');

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

function the_sorrow_and_the_pride_task_transcribe_status($status = 'total') {
  $query = new EntityFieldQuery();

  $query->entityCondition('entity_type', 'file')
    ->entityCondition('bundle', 'image')
    //->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('field_readable_text', 'value', 'yes', '=');

  if ($status != 'total') {
    $query->fieldCondition('field_transcription_complete', 'value', true, '=');
  }

  $result = $query->execute();

  if (isset($result['file'])) {
    $image_fids = array_keys($result['file']);
    return count($image_fids);
  }
}

/**
 * Implements hook_block_info().
 */
function the_sorrow_and_the_pride_block_info() {
  // This example comes from node.module.
  $blocks['tsatp_footer'] = array(
    'info' => t('TSATP footer (the_sorrow_and_the_pride.module)'),
    // DRUPAL_CACHE_PER_ROLE will be assumed.
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function the_sorrow_and_the_pride_block_view($delta = '') {
  switch ($delta) {
    case 'tsatp_footer':
      $block['subject'] = '';
      $block['content'] = '<p>A project by team <a href="http://2016.hackerspace.govhack.org/content/tabula-rasa-tsatp">Tabula Rasa</a> for GovHackNZ 2016.</p>
        <p><em>The Sorrow And The Pride</em> is an homage to <em><a href="https://www.amazon.com/sorrow-pride-New-Zealand-memorials/dp/0477014755">The Sorrow And The Pride: New Zealand War Memorials</a></em> by Chris Maclean and Jock Philips.</p>';
      return $block;
  }
}
